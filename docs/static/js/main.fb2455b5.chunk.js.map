{"version":3,"sources":["components/AddCategories.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifsExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAMhB,SACE,uBACEO,KAAO,OACPC,MAAUT,EACVU,SAnBoB,SAAEP,GAE1BF,EAAcE,EAAEQ,OAAOF,a,+BCPZG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,iDAEiCC,UAAUH,GAF3C,+DAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIAA,EAAKC,OAJL,uBAIdC,EAJc,EAIdA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCATO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEvC,OACE,sBAAKc,UAAU,yCAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCFOO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGxB,ECL0B,SAAEA,GAC5B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAY,WACVxB,EAASC,GACNwB,MAAM,SAAAC,GACLC,YAAY,WACVJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,WAEN,CAAEpB,IAEEqB,EDb0BM,CAAc3B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAOrB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAqDhB,KAEnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAIKH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAGOA,GAFDA,EAAIC,aEYPiB,EAlCO,WAGpB,MAAoC1C,mBAAS,CAAC,kBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAUA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAGA,6BAEI4C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAYA,GADJA,Y,MCrBtB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fb2455b5.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputchange = ( e ) => {\n    // console.log(e.target.value);\n    setInputValue(e.target.value);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputValue.trim().length > 2){\n      setCategories(categorias => [inputValue, ...categorias]);\n      setInputValue('');\n    }\n    // console.log('Submit Hecho');\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input \n        type = 'text'\n        value = { inputValue }\n        onChange = { handleInputchange }\n\n        />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n  \n}\n\n","\n\n  export const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ytNpb4eAkjZ30wbHCfTejcM3EsJE72dE`\n    const resp = await fetch( url )\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url\n      }\n    })\n    \n    return gifs;\n  }","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url }) => {\n  // console.log({ id, title, url });\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={ url } alt={ title } />\n      <p> { title } </p>\n    </div>\n  )\n}\n","import React/* , {  useEffect, useState } */ from 'react';\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n  // const [images, setImages] = useState([]);\n  const { data:images, loading } = useFetchGifs( category );\n  // useEffect( () => {\n  //   getGifs( category )\n  //     // .then( imgs => setImages(imgs))\n  //     .then(setImages);\n  // }, [ category ])\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'> { category }</h3>\n\n      { loading && <p className='animate__animated animate__flash'>Loading...</p> }\n      \n      {<div className='card-grid'>\n        {\n          // images.map( ({ id, title }) => (\n            // <li key = { id }> { title } </li>\n            images.map( img => (\n            <GifGridItem \n            key={ img.id }\n              // img = { img }\n              { ...img }\n              />\n          ))\n        }\n      </div>}\n    </>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect ( () => {\n    getGifs( category )\n      .then( imgs => {\n        setTimeout( () => {\n          setState({\n            data: imgs,\n            loading: false\n          });\n        }, 1500)\n      })\n  }, [ category ])\n\n  return state; //{data: [], loading: true}\n}\n","import React,{ useState } from 'react';\n\nimport { AddCategory } from './components/AddCategories';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifsExpertApp = () => {\n\n  // const categories = ['One Punch', 'Pokemon', 'Dragon Ball Z']\n  const [categories, setCategories] = useState(['Dragon Ball Z']);\n\n  /* const handleAdd = () => {\n    const nuevo = 'Ranma 1/2';\n    setCategories([...categories, nuevo]);\n    // setCategories puede recibir un callback\n    // Primero sera el callback => [el estado anterior, el nuevo estado];\n    // setCategories( cats => [...cats, 'Ranma 1/2']);\n  } */\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n      {/* <button onClick={handleAdd}>Agregar Nuevo</button> */}\n\n      <ol>\n        {\n          categories.map( category => (\n            <GifGrid\n              key = { category }\n              category = {category}\n            />\n          ))\n        }\n      </ol>\n    </>\n  )\n}\n\nexport default GifsExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifsExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifsExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}